# Inspiration: https://github.com/edx/configuration/blob/master/.travis.yml

dist: trusty
language: generic

env: 
  global: 
    - IPOPT_DEFAULT_LINEAR_SOLVER=ma57
    - OCTAVEPATH=/home/travis/build/octave-install
    - KEEP_GOING=1
    - EXTRA_SWIG_FLAGS="-nodelete"

  matrix:
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=32 compilerprefix=i686-w64-mingw32 OCTAVE_VERSION=4.4.0 OCTAVE_API_VERSION=5 OCTAVE_PREFIX=""
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=64 compilerprefix=x86_64-w64-mingw32 OCTAVE_VERSION=4.4.0 OCTAVE_API_VERSION=5 OCTAVE_PREFIX=""
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=32 compilerprefix=i686-w64-mingw32 OCTAVE_VERSION=4.4.1 OCTAVE_API_VERSION=6 OCTAVE_PREFIX=""
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=64 compilerprefix=x86_64-w64-mingw32 OCTAVE_VERSION=4.4.1 OCTAVE_API_VERSION=6 OCTAVE_PREFIX=""
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=32 compilerprefix=i686-w64-mingw32 OCTAVE_VERSION=5.1.0 OCTAVE_API_VERSION=7 OCTAVE_PREFIX="mingw32/"
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=64 compilerprefix=x86_64-w64-mingw32 OCTAVE_VERSION=5.1.0 OCTAVE_API_VERSION=7 OCTAVE_PREFIX="mingw64/"
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=32 compilerprefix=i686-w64-mingw32 OCTAVE_VERSION=5.2.0 OCTAVE_API_VERSION=7 OCTAVE_PREFIX="mingw32/"
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=64 compilerprefix=x86_64-w64-mingw32 OCTAVE_VERSION=5.2.0 OCTAVE_API_VERSION=7 OCTAVE_PREFIX="mingw64/"
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=32 compilerprefix=i686-w64-mingw32 OCTAVE_VERSION=5.2.0 OCTAVE_API_VERSION=7 OCTAVE_PREFIX=""
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=64 compilerprefix=x86_64-w64-mingw32 OCTAVE_VERSION=5.2.0 OCTAVE_API_VERSION=7 OCTAVE_PREFIX=""
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=32 compilerprefix=i686-w64-mingw32 OCTAVE_VERSION=4.2.2 OCTAVE_API_VERSION=4 OCTAVE_PREFIX=""
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=64 compilerprefix=x86_64-w64-mingw32 TESTCOMMIT="1" OCTAVE_VERSION=4.2.2 OCTAVE_API_VERSION=4

before_script:
  - set -e
  - set -o pipefail  # otherwise, piping with grep discards exit statuses

script:
  - pushd /home/travis/build/

  # travis-wait seems to stop at 20 mins, regardless if output is being generated
  - (while true ; do sleep 60 ; echo "ping" ; done ) &

  - wget https://ftp.gnu.org/gnu/octave/windows/octave-${OCTAVE_VERSION}-w${BITNESS}.zip
  - unzip octave-${OCTAVE_VERSION}-w${BITNESS}.zip > /dev/null
  - cp -R octave-${OCTAVE_VERSION}-w${BITNESS} octave-${OCTAVE_VERSION} || allowfail 1
  - popd
  - pushd casadi
  - mkdir build
  - pushd build
  - echo $MINGW_ROOT
  - |
    cat <<EOF >toolchain.cmake
    # this one is important
    SET(CMAKE_SYSTEM_NAME Windows)
    #this one not so much
    SET(CMAKE_SYSTEM_VERSION 1)

    SET(PREFIX $compilerprefix)

    # specify the cross compiler
    SET(CMAKE_C_COMPILER   $compilerprefix-gcc)
    SET(CMAKE_CXX_COMPILER $compilerprefix-g++)
    SET(CMAKE_Fortran_COMPILER $compilerprefix-gfortran)
    set(CMAKE_RC_COMPILER $compilerprefix-windres)
    
    # where is the target environment 
    SET(CMAKE_FIND_ROOT_PATH  $MINGW_ROOT/$compilerprefix)
    SET(CMAKE_CXX_FLAGS "$CPPFLAGS -fno-ipa-cp-clone" CACHE STRING "" FORCE)
    SET(CMAKE_C_FLAGS "-fno-ipa-cp-clone" CACHE STRING "" FORCE)
    
    # search for programs in the build host directories
    SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
    # for libraries and headers in the target directories
    SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY NEVER)
    SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE NEVER)
    set(CMAKE_SHARED_LIBRARY_SUFFIX "dll")
    EOF
  - echo $CMAKE_LIBRARY_PATH
  - cmake --version
  - bash -c "cmake -DFORTRAN_REQUIRED=ON -DWITH_COMMON=ON $casadi_build_flags -DOCTAVE_INCLUDE_DIRS=$HOME/build/octave-${OCTAVE_VERSION}/${OCTAVE_PREFIX}include/octave-${OCTAVE_VERSION}/octave/ -DOCTAVE_LIBRARIES=\"$HOME/build/octave-${OCTAVE_VERSION}/${OCTAVE_PREFIX}bin/liboctinterp-${OCTAVE_API_VERSION}.dll;$HOME/build/octave-${OCTAVE_VERSION}/${OCTAVE_PREFIX}bin/liboctave-${OCTAVE_API_VERSION}.dll\" -DWITH_OCTAVE_IMPORT=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWITH_SELFCONTAINED=ON -DBLA_STATIC=ON -DBLA_VENDOR=Generic -DBLA_DIR=/home/travis/build/lapack -DWITH_OCTAVE=ON -DWITH_OCTAVE_IMPORT=ON -DENABLE_STATIC=OFF -DENABLE_SHARED=ON -DWITH_DEEPBIND=ON -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake -DCMAKE_INSTALL_PREFIX=../octave_install -DWITH_EXAMPLES=OFF .." || remote_access 
  - cat /home/travis/build/casadi/binaries/casadi/build/casadi/interfaces/lapack/CMakeFiles/casadi_linsol_lapackqr.dir/linklibs.rsp
  - make install -j2 VERBOSE=1
  - $compilerprefix-dlltool --input-def ../casadi/core/casadi.def --dllname ../octave_install/casadi/libcasadi.dll  --output-lib ../octave_install/casadi/casadi.lib
  - $compilerprefix-dlltool --input-def ../external_packages/osqp/osqp.def --dllname ../octave_install/casadi/libosqp.dll  --output-lib ../octave_install/casadi/osqp.lib
  
  #- cp $MINGW_ROOT/lib/gcc/$compilerprefix/*win32/*.dll ../octave_install
  #- cp $MINGW_ROOT/$compilerprefix/lib/*.dll ../octave_install
  - pwd
  - ls ../octave_install/casadi/
  - cp -RL $MINGW_ROOT/$compilerprefix/include ../octave_install/casadi/casadi/jit/mingw
  #- cp -R /home/travis/build/clang/include/c++/v1 ../octave_install/casadi/jit/mingw/c++
 
  - popd

before_deploy:
  - export RESULT="$HOME/casadi-windows-octave-${OCTAVE_VERSION}-w${BITNESS}-$COMMIT$NAME_SUFFIX.zip"
  - pushd octave_install/casadi && zip -r $RESULT . && popd
  - export TRAVIS_TAG="commit-$COMMIT"

deploy:
  overwrite: true
  provider: releases
  api_key: $github_token
  file: $RESULT
  skip_cleanup: true
  on:
    all_branches: true

after_success:
  - test_commit test-windows-octave

branches:
  except:
    - /.*appveyor.*/
    - /.*commit.*/
before_install:
  - sudo apt-get update -qq
  - sync
  - free -t -m
  - pushd casadi && export COMMIT=`git rev-parse --short=7 HEAD` && popd
  - pushd ../../ && git clone https://github.com/casadi/testbot.git
  - pushd testbot && source recipes/setup.sh && popd
  - source testbot/shellhelpers
  - sudo apt-get install p7zip-full -y
  - export SLURP_OS=trusty
  - export SLURP_CROSS=mingwoct
  - slurp swig_matlab
  - slurp mingw_octave
  - ls $MINGW_ROOT/$compilerprefix/include
  - slurp_common
  - slurp lapack
  - ${compilerprefix}-g++ -v
  - git clone git@github.com:meganz/mingw-std-threads.git
  - export CPPFLAGS="$CPPFLAGS -I$(pwd)/mingw-std-threads"
  - popd
  - sudo apt-get update
  - #sudo apt-get install -y binutils git python-dev gfortran # trick cmake into looking for fortran support
  - sudo pip install pysftp
  - source /home/travis/build/testbot/restricted/env.sh
  #- ssh-keyscan $GATE_SERVER >> ~/.ssh/known_hosts


