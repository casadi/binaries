# Inspiration: https://github.com/edx/configuration/blob/master/.travis.yml

dist: trusty
language: generic

env: 
  global: 
    - IPOPT_DEFAULT_LINEAR_SOLVER=ma57
    - SNOPT=/home/travis/build/snopt7
    - OCTAVEPATH=/home/travis/build/octave-install
    - GUROBI_HOME=/home/travis/build/gurobi
    - OCTAVE_VERSION=4.2.1

  matrix:
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=32 compilerprefix=i686-w64-mingw32
    - BUILD_TYPE=Release NAME_SUFFIX="" BITNESS=64 compilerprefix=x86_64-w64-mingw32 TESTCOMMIT="1" 

before_script:
  - set -e
  - set -o pipefail  # otherwise, piping with grep discards exit statuses

script:
  - pushd /home/travis/build/

  # travis-wait seems to stop at 20 mins, regardless if output is being generated
  - (while true ; do sleep 60 ; echo "ping" ; done ) &

  - wget https://ftp.gnu.org/gnu/octave/windows/octave-${OCTAVE_VERSION}-w${BITNESS}.zip
  - unzip octave-${OCTAVE_VERSION}-w${BITNESS}.zip > /dev/null
  - popd
  - pushd casadi
  - mkdir build
  - pushd build
  - echo "set(LAPACK_LIBRARIES \${LAPACK_LIBRARIES} gfortran)" | sudo tee --append  /usr/share/cmake-3.2/Modules/FindLAPACK.cmake
  - |
    cat <<EOF >toolchain.cmake
    # this one is important
    SET(CMAKE_SYSTEM_NAME Windows)
    #this one not so much
    SET(CMAKE_SYSTEM_VERSION 1)

    SET(PREFIX $compilerprefix)

    # specify the cross compiler
    SET(CMAKE_C_COMPILER   $compilerprefix-gcc)
    SET(CMAKE_CXX_COMPILER $compilerprefix-g++)
    SET(CMAKE_Fortran_COMPILER $compilerprefix-gfortran)
    set(CMAKE_RC_COMPILER $compilerprefix-windres)
    
    # where is the target environment 
    SET(CMAKE_FIND_ROOT_PATH  $MINGW_ROOT/$compilerprefix)
    SET(CMAKE_CXX_FLAGS "-fno-ipa-cp-clone" CACHE STRING "" FORCE)
    SET(CMAKE_C_FLAGS "-fno-ipa-cp-clone" CACHE STRING "" FORCE)
    
    # search for programs in the build host directories
    SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
    # for libraries and headers in the target directories
    SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY NEVER)
    SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE NEVER)
    set(CMAKE_SHARED_LIBRARY_SUFFIX "dll")
    EOF
  - echo $CMAKE_LIBRARY_PATH
  - /usr/bin/cmake -DWITH_COMMON=ON $casadi_build_flags -DOCTAVE_INCLUDE_DIRS=$HOME/build/octave-${OCTAVE_VERSION}/include/octave-${OCTAVE_VERSION}/octave/ -DOCTAVE_LIBRARIES="$HOME/build/octave-${OCTAVE_VERSION}/bin/liboctinterp-4.dll;$HOME/build/octave-${OCTAVE_VERSION}/bin/liboctave-4.dll" -DWITH_OCTAVE_IMPORT=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWITH_SELFCONTAINED=ON -DBLA_STATIC=ON -DWITH_OCTAVE=ON -DWITH_OCTAVE_IMPORT=ON -DENABLE_STATIC=OFF -DENABLE_SHARED=ON -DWITH_DEEPBIND=ON -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake -DCMAKE_INSTALL_PREFIX=../octave_install -DWITH_EXAMPLES=OFF .. 
  - make install -j2 VERBOSE=1
  - ls lib
  - make install
  - ls $MINGW_ROOT/lib/gcc/$compilerprefix
  #- cp $MINGW_ROOT/lib/gcc/$compilerprefix/*win32/*.dll ../octave_install
  #- cp $MINGW_ROOT/$compilerprefix/lib/*.dll ../octave_install
  #- cp -RL /usr/$compilerprefix/include ../octave_install/casadi/jit/mingw
  #- cp -R /home/travis/build/clang/include/c++/v1 ../octave_install/casadi/jit/mingw/c++
 
  - popd
  - pushd octave_install/casadi && zip -r ../../bundle.zip . && popd
  - |
    cat <<EOF > upload.py
    import pysftp
    sftp = pysftp.Connection('web.sourceforge.net', 
                          username='casaditestbot,casadi',
                          private_key='/home/travis/build/testbot/id_rsa_travis')
                          
    with sftp.cd('/home/pfs/project/c/ca/casadi/CasADi'):
      sftp.makedirs('commits')
      with sftp.cd('commits'):
        sftp.makedirs("$COMMIT")
        with sftp.cd("$COMMIT"):
          sftp.makedirs('windows')
          with sftp.cd('windows'):
            sftp.put("bundle.zip","casadi-octave-${OCTAVE_VERSION}-w${BITNESS}-$COMMIT$NAME_SUFFIX.zip")
    EOF
  - sudo python upload.py

after_success:
  - test_commit test-windows-octave

branches:
  except:
    - /.*appveyor.*/

before_install:
  - sudo apt-get update -qq
  - sync
  - free -t -m
  - pushd casadi && export COMMIT=`git rev-parse --short=7 HEAD` && popd
  - pushd ../../ && git clone https://github.com/casadi/testbot.git
  - pushd testbot && git checkout merged && source recipes/setup.sh && popd
  - source testbot/shellhelpers
  - sudo apt-get install p7zip-full -y
  - export SLURP_OS=trusty
  - export SLURP_CROSS=mingwoct
  - #slurp ecos
  - slurp lapack
  - slurp swig_matlab
  - slurp ipopt
  - slurp bonmin
  - slurp worhp
  - slurp mingw_octave
  - slurp clang  
  - ${compilerprefix}-g++ -v
  - slurp hsl
  - #travis_retry testbot/recipes/fetch.sh gurobi650_mingw64.zip && mkdir gurobi && unzip gurobi650_mingw64.zip -d gurobi
  - #travis_retry testbot/recipes/fetch.sh snopt7.tar.gz && mkdir snopt7 && tar -xf snopt7.tar.gz -C snopt7
  - #pushd testbot/restricted/cplex && mkdir cplex && tar -xf cplex12.4.tar.gz -C cplex && mkdir concert && tar -xf cplex12.4-concert.tar.gz -C concert && popd
  - #pushd testbot/restricted && mkdir -p worhp && cd  worhp && 7za e ../libworhp_debian7_amd64_gcc47_1.7-12970f3.7z -y && popd
  - popd
  - sudo apt-get update
  - sudo apt-get install -y binutils git cmake cmake-data python-dev
  - sudo pip install pysftp
  - source /home/travis/build/testbot/restricted/env.sh
  - ssh-keyscan $GATE_SERVER >> ~/.ssh/known_hosts


