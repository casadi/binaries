# Inspiration: https://github.com/edx/configuration/blob/master/.travis.yml
env: 
  global: 
    - IPOPT_DEFAULT_LINEAR_SOLVER=ma57
    - OCTAVEPATH=/home/travis/build/octave-install
    - MOSEK=/home/travis/build/mosek
    - MOSEKLM_LICENSE_FILE=/home/travis/build/testbot/restricted/mosek.lic
    - EXTRA_SWIG_FLAGS="-nodelete"
    
    
  matrix:
    - BUILD_TYPE=Release NAME_SUFFIX="" OCTAVE_VERSION=4.2.2 TESTCOMMIT="1"
    - BUILD_TYPE=Release NAME_SUFFIX="" OCTAVE_VERSION=4.4.1
    - BUILD_TYPE=Release NAME_SUFFIX="" OCTAVE_VERSION=5.1.0

os: linux
dist: xenial
language: generic

before_script:
  - set -e

script:
  - pushd casadi
  - mkdir build
  - pushd build
  - bash -c "cmake $casadi_build_flags -DWITH_OPENMP=OFF -DWITH_SELFCONTAINED=ON -DCMAKE_INSTALL_PREFIX=$OCTAVEPATH -DWITH_DEEPBIND=ON -DWITH_OCTAVE=ON -DWITH_OCTAVE_IMPORT=ON -DWITH_PROFILING=ON -DWITH_DOC=ON -DWITH_EXAMPLES=ON -DWITH_EXTRA_WARNINGS=ON .."
  - make
  - make install
  - popd
  
before_deploy:
  #- echo "this file (and the casadi directory) should end up in a folder called 'casadi-linux-octave-$COMMIT$NAME_SUFFIX'" > $OCTAVEPATH/dummy.txt
  - export RESULT="$HOME/casadi-linux-octave-${OCTAVE_VERSION}-$COMMIT$NAME_SUFFIX.tar.gz"
  - pushd $OCTAVEPATH/casadi && tar -czf $RESULT .  && popd
  - export TRAVIS_TAG="commit-$COMMIT"

deploy:
  provider: releases
  overwrite: true
  api_key: $github_token
  file: $RESULT
  skip_cleanup: true
  on:
    all_branches: true
  
after_success:
 - test_commit test-debian-octave
  
branches:
  except:
    - /.*appveyor.*/
    - /.*commit.*/

before_install:
  - shell_session_update() { :; } # Workaround for travis-ci/travis-ci#6522
  - pushd casadi && export COMMIT=`git rev-parse --short=7 HEAD` && popd
  - pushd ../../ && git clone https://github.com/casadi/testbot.git
  - pushd testbot && source recipes/setup.sh && popd
  - |
    if [ "${OCTAVE_VERSION}" == "4.2.2" ]; then
      sudo apt-add-repository ppa:octave/stable -y
      sudo apt-get update -qq
      sudo apt-get install octave liboctave-dev -y
    fi
  - |
    if [ "${OCTAVE_VERSION}" == "4.4.1" ]; then
      export casadi_build_flags="$casadi_build_flags -DOCTAVE_ROOT_DIR=$HOME/octave -DOCTAVE_BIN_PATHS=$HOME/octave/bin -DOCTAVE_LIBRARIES_PATHS=$HOME/octave/lib -DOCTAVE_INCLUDE_PATHS=$HOME/octave/include"
      docker run --rm -v $HOME/octave:/host/octave ubuntu:18.10 bash -c "apt-get update && apt-get -y install octave liboctave-dev; mkdir /host/octave/bin && mkdir /host/octave/include && mkdir /host/octave/lib && cp /usr/bin/*oct* /host/octave/bin && cp -R /usr/include/octave-4.4.1/octave/* /host/octave/include && cp /usr/lib/x86_64-linux-gnu/*oct* /host/octave/lib" || echo 1
    fi
  - |
    if [ "${OCTAVE_VERSION}" == "5.1.0" ]; then
       export OCTAVE_ROOT=/var/lib/flatpak/app/org.octave.Octave/x86_64/stable/active/files/
       export casadi_build_flags="$casadi_build_flags -DOCTAVE_ROOT_DIR=$OCTAVE_ROOT -DOCTAVE_BIN_PATHS=$OCTAVE_ROOT/bin -DOCTAVE_LIBRARIES_PATHS=$OCTAVE_ROOT/lib -DOCTAVE_INCLUDE_PATHS=$OCTAVE_ROOT/include"
       echo $casadi_build_flags
       sudo add-apt-repository -y ppa:alexlarsson/flatpak
       sudo apt update
       sudo apt install -y flatpak
       sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
       sudo flatpak install -y flathub org.octave.Octave
       ls $OCTAVE_ROOT
    fi
  - sudo apt-get install p7zip-full -y
  - export SLURP_OS=trusty
  - slurp_common
  - slurp swig_matlab
  - popd
  - sudo apt-get update -qq
  - sudo apt-get install -y binutils gfortran-4.8 g++-4.8 gcc-4.8 git cmake liblapack-dev libmumps-seq-dev libblas-dev liblapack-dev libxml2-dev
  - gfortran-4.8 --version
  - export FC=gfortran-4.8
  - export CC=gcc-4.8
  - export CXX=g++-4.8
  - sudo apt-get install fakeroot rpm alien
  - ssh-keyscan web.sourceforge.net >> ~/.ssh/known_hosts 
